#!/bin/bash
#$ -S /bin/bash
#$ -V
#$ -cwd
## Queue settings (can be set at runtime in the qsub submition line)
#$ -q short.q
## [Optional] to ask between 1 and 4 processors
#$ -pe thread 4-6
## [Optional] to get job status by email
#$ -M dmckeown@sb-roscoff.fr
#$ -m bea
## [Recommended] Ask for at least 1GB of memory for the job
#$ -l mem_free=12G
## [Recommended] Kill the job if it eats 4GB per slot (i.e. thread) 
## here it means between 8GB*1 thread=8GB and 8GB*6 threads=48GB
#$ -l h_vmem=32G

# Print information about the current job
# ---------------------------------------
# Print beginning of job
echo "$(date) job $JOB_NAME started in $QUEUE with jobID=$JOB_ID on $HOSTNAME" 1>&2
# Print the number of threads used
echo "NSLOTS = $NSLOTS" 1>&2

# Set PATH with custom softwares
# ------------------------------
export OLDPATH=${PATH}
export PATH=/usr/local/genome2/conda3/envs/diamond-0.9.21/bin:${PATH}

##### for phaeoexplorer genomes:
#awk -F ";" '{if((($64 =="V") || ($64 =="VC")) || (($64 =="CV") || ($64 =="VorC"))) print $0}' UBE03_D001 | cut -d ";" -f 1-7 | sort -V -k 1,1 -k 4,4 -k 5,5 | awk -F"\t|;" '{print $9}' | sed 's/ID=//g' | sed -E 's/.$/& assembled CDS/g' > UBE04_A001; ## get names of potential virus genes
#while read line; do seqtk subseq $line UBE04_A001 > UBE04_A001_ncvog_"$(basename $line)"; done < UBE01_ofa; ## get fastas
#find . -name "UBE04_A001_ncvog_*.fa" | split -l 5 - ; for file in x*; do mv "$file" "${file//x/UBE04_B001_x}"; done;

##### for previously known viral proteomes such as EsV-1, etc:
#find . -name "UBE04_A002_ncvog_*.fa" > UBE04_B002; ## list all viral proteomes



source $CONDA3/activate /usr/local/genome2/conda3/envs/diamond-0.9.21;
while read line; do diamond blastp -d /projet/fr2424/sib/dmckeown/db/virus/ncvog.dmnd -q $line --more-sensitive -o $(basename "$line" .fa).blast_test -f 6 qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore salltitles; done < $1;
conda deactivate;

# Reset PATH in inital state
# --------------------------
export PATH=${OLDPATH}
unset OLDPATH



# Get summary of job stats
# ------------------------
# Get (max) memory consumption
echo "$(qstat -f -j $JOB_ID | grep vmem)" 1>&2
# Print end of job. If not printed, job died before the end.
echo "$(date) job $JOB_NAME done" 1>&2

