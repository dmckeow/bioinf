#!/bin/bash
#$ -S /bin/bash
#$ -V
#$ -cwd
## Queue settings (can be set at runtime in the qsub submition line)
#$ -q short.q
## [Optional] to ask between 1 and 4 processors
#$ -pe thread 6-20
## [Optional] to get job status by email
#$ -M dmckeown@sb-roscoff.fr
#$ -m bea
## [Recommended] Ask for at least 1GB of memory for the job
#$ -l mem_free=1G
## [Recommended] Kill the job if it eats 4GB per slot (i.e. thread) 
## here it means between 8GB*1 thread=8GB and 8GB*6 threads=48GB
#$ -l h_vmem=32G

# Print information about the current job
# ---------------------------------------
# Print beginning of job
echo "$(date) job $JOB_NAME started in $QUEUE with jobID=$JOB_ID on $HOSTNAME" 1>&2
# Print the number of threads used
echo "NSLOTS = $NSLOTS" 1>&2




awk -F ";" '{if((($64 =="V") || ($64 =="VC")) || (($64 =="CV") || ($64 =="VorC"))) print $0}' UBE03_D001 | cut -d ";" -f 1-7 | sort -V -k 1,1 -k 4,4 -k 5,5 | awk -F"\t|;" '{print $9}' | sed 's/ID=//g' | sed -E 's/.$/& assembled CDS/g' > UBE04_A001; ## get names of potential virus genes
while read line; do seqtk subseq $line UBE04_A001 > UBE04_A001_ncvog_"$(basename $line)"; done < UBE01_ofa; ## get fastas


##### this script prepares a final gff file with annotations from UBE05, fastas for UBE contigs only, and prepares gff and fastas for contigs with UBEs to create annotation figures in UGENE
##### this script includes 3 MANUAL STEPS; run script, then do the manual steps as detailed below in the script, then run final steps (one step is for EsV-1 gff prep; ignore if you have already done it)
##### important outputs of UBE07: UBE07_*.gff (for usual .gff stuff), UBE07_*UGENE.gff & UBE07_*UGENE.fa (merge in UGENE to gb for annotation visualisation), and UBE07_E006_key (annotation abbreviation key)

### MANUAL STEP 1; check UBE07_E003 vs UBE07_E004, edit annotations that are too broad or redundant in UBE07_E004, you will probably have to make several versions of UBE07_E003 and UBE07_E004, until the they have no redundant or too broad abbreviations; name final version UBE07_E005.
### MANUAL STEP 2; copy UBE07_E005 > UBE07_E006_key, and manually remove all the synonymous genes, so you have a key with 1 gene name, 1 abbreviation, for figure legends, etc

##### Once manual steps are done, now finish generating the gffs for UGENE (this step may take 6 mins per genome)
#cat UBE07_B005 UBE07_C004 UBE07_D001 | awk -F'\t|;' 'BEGIN {OFS="\t"} ; {print $1,$2,$3,$16,$4,$5,$6,$7,$8}' | sed 's/mRNA\tphexvi=//g' | sed 's/\t\t/\t/g' > UBE07_D002; ## get \t delimited part of gffs
#cat UBE07_B005 UBE07_C004 UBE07_D001 | awk -F'\t|;' 'BEGIN {OFS=";"} ; {print $9,$10,$11,$12,$13,$14,$15,$17,$18,$19,$20,$21}' | paste UBE07_D002 - | sort -V -k 1,1 -k 4,5 -k 3,3 | sed -E 's/;;|;;;//g' | sed 's/=mRNA.*ontig/=/g' | sed 's/UBE_product=EsV-1-/UBE_product=E/g' | sed 's/UBE_product=ESV-1-0*/UBE_product=E/g' | sed 's/UBE_product=ESV-1-/UBE_product=E/g' | sed 's/UBE_product=.*Esvgp0*/UBE_product=E/g' | sed 's/UBE_product=.*Esvgp/UBE_product=E/g' | sed 's/UBE_product=.*FeldSpV_gp0*/UBE_product=F/g' | sed 's/UBE_product=.*FeldSpV_gp/UBE_product=F/g' | sed 's/UBE_product=FirrV-1-/UBE_product=f/g' > UBE07_D003; ## get ; delimited part of gffs and merge with \t part and shorten gene names
#awk 'FNR==NR { array[$1]=$2; next } { for (i in array) gsub(i, array[i]) }1' UBE07_E005 UBE07_D003 | awk -F'ontig' '{print > $1"_UBE07_UGENE.gff"}'; ## search UGENE gffs for ncvog_names ($1 in 1st input file) and replace with abbreviations (with $2 in 1st input) and split into gffs per genome

##### finally, fix all .gff file names
#for file in *_c_UBE07_UGENE.gff; do mv "$file" "${file//_c_UBE07_UGENE.gff/_UBE07_UGENE.gff}"; done; for file in *_C_UBE07_UGENE.gff; do mv "$file" "${file//_C_UBE07_UGENE.gff/_UBE07_UGENE.gff}"; done; 


##### FINALLY, create fastas for UGENE, using UBE contig list to get complete, unduplicated sequence fastas of UBE contigs ONLY (also a slow step)
#seqtk subseq /projet/fr2424/sib/dmckeown/phaeoex_screen/input/01__FINAL_GENOME_ASSEMBLIES/Desmarestia-dudresnayi.fa UBE07_C001 > UBE07_UGENE_Desmarestia-dudresnayi.fa;
#seqtk subseq /projet/fr2424/sib/dmckeown/phaeoex_screen/input/01__FINAL_GENOME_ASSEMBLIES/Ectocarpus-crouaniorum-2c_FEMALE.fa UBE07_C001 > UBE07_UGENE_Ectocarpus-crouaniorum-2c_FEMALE.fa;
#seqtk subseq /projet/fr2424/sib/dmckeown/phaeoex_screen/input/01__FINAL_GENOME_ASSEMBLIES/Ectocarpus-crouaniorum-2c_MALE.fa UBE07_C001 > UBE07_UGENE_Ectocarpus-crouaniorum-2c_MALE.fa;
#seqtk subseq /projet/fr2424/sib/dmckeown/phaeoex_screen/input/01__FINAL_GENOME_ASSEMBLIES/Ectocarpus-fasciculatus_MALE.fa UBE07_C001 > UBE07_UGENE_Ectocarpus-fasciculatus_MALE.fa;
#seqtk subseq /projet/fr2424/sib/dmckeown/phaeoex_screen/input/01__FINAL_GENOME_ASSEMBLIES/Ectocarpus-siliculosus-1a_FEMALE.fa UBE07_C001 > UBE07_UGENE_Ectocarpus-siliculosus-1a_FEMALE.fa;
#seqtk subseq /projet/fr2424/sib/dmckeown/phaeoex_screen/input/01__FINAL_GENOME_ASSEMBLIES/Ectocarpus-siliculosus-1a_MALE.fa UBE07_C001 > UBE07_UGENE_Ectocarpus-siliculosus-1a_MALE.fa;
#seqtk subseq /projet/fr2424/sib/dmckeown/phaeoex_screen/input/01__FINAL_GENOME_ASSEMBLIES/Ectocarpus-sp1_FEMALE.fa UBE07_C001 > UBE07_UGENE_Ectocarpus-sp1_FEMALE.fa;
#seqtk subseq /projet/fr2424/sib/dmckeown/phaeoex_screen/input/01__FINAL_GENOME_ASSEMBLIES/Ectocarpus-sp1_MALE.fa UBE07_C001 > UBE07_UGENE_Ectocarpus-sp1_MALE.fa;
#seqtk subseq /projet/fr2424/sib/dmckeown/phaeoex_screen/input/01__FINAL_GENOME_ASSEMBLIES/Ectocarpus-sp2_FEMALE.fa UBE07_C001 > UBE07_UGENE_Ectocarpus-sp2_FEMALE.fa;
#seqtk subseq /projet/fr2424/sib/dmckeown/phaeoex_screen/input/01__FINAL_GENOME_ASSEMBLIES/Ectocarpus-sp2_MALE.fa UBE07_C001 > UBE07_UGENE_Ectocarpus-sp2_MALE.fa;
#seqtk subseq /projet/fr2424/sib/dmckeown/phaeoex_screen/input/01__FINAL_GENOME_ASSEMBLIES/Ectocarpus-sp3_MALE.fa UBE07_C001 > UBE07_UGENE_Ectocarpus-sp3_MALE.fa;
#seqtk subseq /projet/fr2424/sib/dmckeown/phaeoex_screen/input/01__FINAL_GENOME_ASSEMBLIES/Ectocarpus-sp4_FEMALE.fa UBE07_C001 > UBE07_UGENE_Ectocarpus-sp4_FEMALE.fa;
#seqtk subseq /projet/fr2424/sib/dmckeown/phaeoex_screen/input/01__FINAL_GENOME_ASSEMBLIES/Ectocarpus-sp4_MALE.fa UBE07_C001 > UBE07_UGENE_Ectocarpus-sp4_MALE.fa;
#seqtk subseq /projet/fr2424/sib/dmckeown/phaeoex_screen/input/01__FINAL_GENOME_ASSEMBLIES/Ectocarpus-sp5_FEMALE.fa UBE07_C001 > UBE07_UGENE_Ectocarpus-sp5_FEMALE.fa;
#seqtk subseq /projet/fr2424/sib/dmckeown/phaeoex_screen/input/01__FINAL_GENOME_ASSEMBLIES/Ectocarpus-sp6_FEMALE.fa UBE07_C001 > UBE07_UGENE_Ectocarpus-sp6_FEMALE.fa;
#seqtk subseq /projet/fr2424/sib/dmckeown/phaeoex_screen/input/01__FINAL_GENOME_ASSEMBLIES/Ectocarpus-sp9_FEMALE.fa UBE07_C001 > UBE07_UGENE_Ectocarpus-sp9_FEMALE.fa;
#seqtk subseq /projet/fr2424/sib/dmckeown/phaeoex_screen/input/01__FINAL_GENOME_ASSEMBLIES/Laminarionema-elsbetiae_SP.fa UBE07_C001 > UBE07_UGENE_Laminarionema-elsbetiae_SP.fa;
#seqtk subseq /projet/fr2424/sib/dmckeown/phaeoex_screen/input/01__FINAL_GENOME_ASSEMBLIES/Porterinema-fluviatile.fa UBE07_C001 > UBE07_UGENE_Porterinema-fluviatile.fa;
#seqtk subseq /projet/fr2424/sib/dmckeown/phaeoex_screen/input/01__FINAL_GENOME_ASSEMBLIES/Scytosiphon-lomentaria_MALE.fa UBE07_C001 > UBE07_UGENE_Scytosiphon-lomentaria_MALE.fa;
#seqtk subseq /projet/fr2424/sib/dmckeown/phaeoex_screen/input/01__FINAL_GENOME_ASSEMBLIES/Undaria-pinnatifida_MALE.fa UBE07_C001 > UBE07_UGENE_Undaria-pinnatifida_MALE.fa;

##### All the steps below Prepare EsV-1 gff for UGENE
ESVFA="/projet/fr2424/sib/dmckeown/phaeoex_screen/finalresult/UBE07/EsV-1_proteins_fixed.fa"
ESVGFF="/projet/fr2424/sib/dmckeown/phaeoex_screen/finalresult/UBE07/EsV-1_genome_annotations.gff3"
NCVOGDEF="/projet/fr2424/sib/dmckeown/phaeoex_screen/finalresult/NCVOG_NCVOGdef"

##### add NCVOG function names and abbreivate them
awk -F'\t' 'BEGIN {OFS="\t"} ; {print $1,$10}' $NCVOGDEF | sed 's/ /_/g' | sed -E 's/;|:|\[|\]|\|| |\.|\/|\(|\)|,|-/_/g' | sed 's/___/__/g' | sed 's/__/_/g' > UBE07_F001; ## prepare NCVOG protein names
grep ">" $ESVFA | sed -E 's/ |>|\]//g' | sed 's/\[/\t/g' | sort -V -k 6,6 > UBE07_F002; ## get fasta deflines and remove bad characters (fasta is fixed because the EsV-1-155 was missing the ORF field)
##### MANUAL STEP: annoyingly, the GIs in the protein EsV-1 fasta deflines are actually the nucleotide GIs, so fetch them from NCBI from search page results tab - GI list - search in 'Protein' for EsV-1. Get \t delimited protein GIs ($1) and the accessions ($2) and sort them by accession and call it UBE007_F003. Ensure that F002 and F003 have the same accessions in the same order
#awk 'FNR==NR { array[$1]=$2; next } { for (i in array) gsub("\\<"i"\\>", array[i]) }1'  UBE07_F001 UBE07_F003 > UBE07_F004; ## find and replace GIs with correct NCVOG protein name
#paste UBE07_F002 UBE07_F003 UBE07_F004 > UBE07_F005; ## merge the protein fasta deflines with protein GIs and NCVOG names for EsV-1
#cut -f 4,11 UBE07_F005 | sed 's/db_xref=GeneID://g' > UBE07_F006; ## get nucleotide GI (because gff uses them) and NCVOG name only
#awk 'FNR==NR { array[$1]=$2; next } { for (i in array) gsub("\\<"i"\\>", array[i]) }1'  UBE07_F006 $ESVGFF > UBE07_F007; ## replace GI with NCVOG name in gff
#awk 'FNR==NR { array[$1]=$2; next } { for (i in array) gsub("\\<"i"\\>", array[i]) }1'  UBE07_E005 UBE07_F007 > UBE07_F008; ## abbreviate NCVOG names in gff; check it worked with  awk -F'\t|;' '{print $10}' UBE07_F008

##### change $3 to differently colour the conserved and core genes in UGENE
#awk -F'\t|;' 'BEGIN {OFS="\t"} ; {if($3 == "gene" && $10 == "Dbxref=GeneID:nc" || $10 == "Dbxref=GeneID:db" || $10 == "Dbxref=GeneID:pa" || $10 == "Dbxref=GeneID:d5" || $10 == "Dbxref=GeneID:v3") print $1,$2,"ncvogcore",$4,$5,$6,$7,$8}' UBE07_F008 > UBE07_F009; ## label ncvogvore in $3 \t delimit section
#awk -F'\t|;' 'BEGIN {OFS="\t"} ; {if($3 == "gene" && $10 != "Dbxref=GeneID:" && $10 != "Dbxref=GeneID:nc" && $10 != "Dbxref=GeneID:db" && $10 != "Dbxref=GeneID:pa" && $10 != "Dbxref=GeneID:d5" && $10 != "Dbxref=GeneID:v3") print $1,$2,"ncvog",$4,$5,$6,$7,$8}' UBE07_F008 >> UBE07_F009; ## label ncvog in $3 \t delimit section
#awk -F'\t|;' 'BEGIN {OFS="\t"} ; {if($3 != "gene") print $1,$2,$3,$4,$5,$6,$7,$8}' UBE07_F008 >> UBE07_F009; ## get everything else \t delimit section
#awk -F'\t|;' 'BEGIN {OFS="\t"} ; {if($3 == "gene" && $10 == "Dbxref=GeneID:") print $1,$2,$3,$4,$5,$6,$7,$8}' UBE07_F008 >> UBE07_F009; ## get everything else \t delimit section

#awk -F'\t|;' 'BEGIN {OFS=";"} ; {if($3 == "gene" && $10 == "Dbxref=GeneID:nc" || $10 == "Dbxref=GeneID:db" || $10 == "Dbxref=GeneID:pa" || $10 == "Dbxref=GeneID:d5" || $10 == "Dbxref=GeneID:v3") print $9,$10,$11,$12,$13,$14,$15,$16,$17}' UBE07_F008 > UBE07_F010; ## get ; delimit section
#awk -F'\t|;' 'BEGIN {OFS=";"} ; {if($3 == "gene" && $10 != "Dbxref=GeneID:" && $10 != "Dbxref=GeneID:nc" && $10 != "Dbxref=GeneID:db" && $10 != "Dbxref=GeneID:pa" && $10 != "Dbxref=GeneID:d5" && $10 != "Dbxref=GeneID:v3") print $9,$10,$11,$12,$13,$14,$15,$16,$17}' UBE07_F008 >> UBE07_F010; ## get ; delimit section
#awk -F'\t|;' 'BEGIN {OFS=";"} ; {if($3 != "gene") print $9,$10,$11,$12,$13,$14,$15,$16,$17}' UBE07_F008 >> UBE07_F010; ## get ; delimit section
#awk -F'\t|;' 'BEGIN {OFS=";"} ; {if($3 == "gene" && $10 == "Dbxref=GeneID:") print $9,$10,$11,$12,$13,$14,$15,$16,$17}' UBE07_F008 >> UBE07_F010; ## get ; delimit section
#paste UBE07_F009 UBE07_F010 | sort -V -k 4,4 -k 5,5 -k 3,3 | sed -E 's/;;|;;;//g' | sed 's/Dbxref=GeneID:/ncvog_function=/g' | sed 's/Name=ORF0*/Name=/g' | sed 's/Name=ORF/Name=/g' > UBE07_UGENE_F011_EsV-1.gff; ## reunite \t and ; delimited gff fields

# Get summary of job stats
# ------------------------
# Get (max) memory consumption
echo "$(qstat -f -j $JOB_ID | grep vmem)" 1>&2
# Print end of job. If not printed, job died before the end.
echo "$(date) job $JOB_NAME done" 1>&2
