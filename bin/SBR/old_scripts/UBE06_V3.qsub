#!/bin/bash
#$ -S /bin/bash
#$ -V
#$ -cwd
## Queue settings (can be set at runtime in the qsub submition line)
#$ -q long.q
## [Optional] to ask between 1 and 4 processors
#$ -pe thread 6
## [Optional] to get job status by email
#$ -M dmckeown@sb-roscoff.fr
#$ -m bea
## [Recommended] Ask for at least 1GB of memory for the job
#$ -l mem_free=12G
## [Recommended] Kill the job if it eats 4GB per slot (i.e. thread) 
## here it means between 8GB*1 thread=8GB and 8GB*6 threads=48GB
#$ -l h_vmem=32G

# Print information about the current job
# ---------------------------------------
# Print beginning of job
echo "$(date) job $JOB_NAME started in $QUEUE with jobID=$JOB_ID on $HOSTNAME" 1>&2
# Print the number of threads used
echo "NSLOTS = $NSLOTS" 1>&2

##### prepare gff of viral genome and label its genes with ncvog functoinal groups
##### outputs UBE06_B006_*.gff with input fasta to be visualised in UGENE
## run in separate folder per viral genome
##### command line variable inputs:
## $1=nucleotide_fasta (complete sequence format - 1 continuous sequence per genome/contig,etc)
## $2=annotations_gff
## $3='s/gff_gene_names_to_abbreviate_for_visualisation/abbreviation/g'

NCVOGDEF="/projet/fr2424/sib/dmckeown/phaeoex_screen/finalresult/NCVOG_NCVOGdef"
NCVOGFUN="/projet/fr2424/sib/dmckeown/phaeoex_screen/finalresult/NCVOG_functional_categories"

### K ### Prepare NCVOG keys (same as UBE_05 keys)

#sed 's/ /_/g' | sed -E 's/ |=|;|:|\[|\]|\|| |\.|\/|\(|\)|,|-/_/g' $NCVOGDEF | sed -E 's/___/_/g' | sed 's/__/_/g'  | awk -F "\t" 'BEGIN{OFS= "\t"} ; $0 ~ /NCVOG/ && $10 != "" {print $1,$7,"ncvog_prot_name="$10}' | sort -Vu -k 1,1 | sort -V -k 2,2 | sed 's/NCVOG/ncvog=/g' > UBE06_K001; ## prep gi,NCVOG code, funct name key for figs etc
#cut -f 2 UBE06_K001 | sed 's/ncvog=/NCVOG/g' | awk 'FNR==NR { array[$1]=$2; next } { for (i in array) gsub("\\<"i"\\>", array[i]) }1'  $NCVOGFUN - | sed 's/^/ncvfg=/g' | sed 's/NCVOG[0-9]*/NA/g' | paste UBE06_K001 - | sed 's/#REF!/uncharacterized_protein/g' > UBE06_K002; ## $1 gi, $2 ncvog code, $3 protein name, $4 functional group

### A ### MANUAL PART involved - prep gff and fasta

#awk -F "\t" '{print > "UBE06_A001_"$3}' $2; ## split gff by category
### UBE06 MANUAL STEP required - identify which of UBE06_A001_* is equivalent to mRNA, and rename file to UBE06_A002_mRNA AND replace category name in field 3 with mRNA
#bedtools getfasta -fi $1 -bed UBE06_A002_mRNA -fo UBE06_A002_"$(basename $1 .fa)_mRNA.fa"; ## get fasta with separate sequence per mRNA

### A ### Blastx the viral genome mRNAs vs NCVOG database (ETA secs to few mins)

#source $CONDA3/activate /usr/local/genome2/conda3/envs/diamond-0.9.21; diamond blastx -d /projet/fr2424/sib/dmckeown/db/virus/ncvog.dmnd -q UBE06_A002_"$(basename $1 .fa)_mRNA.fa" --more-sensitive -o UBE06_A002_"$(basename $1 .fa)_mRNA.blast" -f 6 qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore salltitles; conda deactivate;

### A ### prepare ncvog labels to genes

#awk -F "\t" '!a[$1]++' UBE06_A002_$(basename "$1" .fa)_mRNA.blast > UBE06_A003; ## get best hit per gene vs NCVOG db
#awk '{print $1"\t"$2";"$3";"$4}' UBE06_K002 | awk 'FNR==NR { array[$1]=$2; next } { for (i in array) gsub("\\<"i"\\>", array[i]) }1' - UBE06_A003 > UBE06_A004; ## replace gi n blast results with NCVOG info
#sed 's/|/\t/g' UBE06_A004 | awk -F "\t" '$0 ~ /ncvog=/ {print "UBE06_ID="$1"_\t"$3}' | sed 's/NCVOG/ncvog=/g' > UBE06_A005; ## prep gene name, NCVOG info key

### B ### add ncvog labels 

#awk -F "\t" '{print "UBE06_ID="$1":"$4-1"-"$5"_"}' UBE06_A002_mRNA > UBE06_B001; ## get all gene names 
#awk 'FNR==NR { array[$1]=$2; next } { for (i in array) gsub(i, array[i]) }1'  UBE06_A005 UBE06_B001 | sed -E 's/UBE06.*/ncvog=NA;ncvog_prot_name=NA;ncvfg=NA/g' | sed 's/;/\t/g' > UBE06_B002; ## copy gene name field to end and replace with NCVOG

### B ### merge ncvog labels with rest of data

#cut -f 3 UBE06_A002_mRNA > UBE06_B003; ## get categories field
cut --complement -f 3 UBE06_A002_mRNA | paste - UBE06_B002 | paste UBE06_B003 - | sed -E $3 > UBE06_B004; ## prepare categories to be replaced in, fix phaeovirus gene names
awk -F "\t" 'BEGIN{OFS="\t"} ; $10 ~ "ncvog=NA" && $12 ~ "ncvfg=NA" {print $2,$3,$1,$4,$5,$6,$7,$8,$9";"$10";"$11";"$12}' UBE06_B004 > UBE06_B005;
awk -F "\t" 'BEGIN{OFS="\t"} ; $10 !~ "ncvog=NA" && $12 ~ "ncvfg=NA" {print $2,$3,$1,$4,$5,$6,$7,$8,$9";"$10";"$11";"$12}' UBE06_B004 >> UBE06_B005;
awk -F "\t" 'BEGIN{OFS="\t"} ; $10 !~ "ncvog=NA" && $12 !~ "ncvfg=NA" {print $2,$3,$12,$4,$5,$6,$7,$8,$9";"$10";"$11";"$12}' UBE06_B004 | sed 's/\tncvfg=/\t/g' >> UBE06_B005; ## swap UBE and ncvog categories in
cat UBE06_A001_* UBE06_B005 | sort -V -k 1,1 -k 4,4 -k 5,5 > UBE06_B006_"$(basename $2)"; ## make final gff, adding other features back in

# Get summary of job stats
# ------------------------
# Get (max) memory consumption
echo "$(qstat -f -j $JOB_ID | grep vmem)" 1>&2
# Print end of job. If not printed, job died before the end.
echo "$(date) job $JOB_NAME done" 1>&2
