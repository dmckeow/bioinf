#!/bin/bash

### mummer is not available on the cluster, so this script must be edited to your specific PC directory setup / installation

### script purpose: DNA whole genome alignment using mummer (against self), specific contig input, self comparison to ID repeat sequences

#### COMMAND LINE inputs required
## $1 = input genome assembly
## $2 = list of contigs to align
## $3 = title (at top of figure)
## $4 = minimum nucmer alignment length (1500 good start)
## $5 = common name in contig to remove for images

####################### INPUTS #####################################

#### software directory
M="/usr/bin/mummer/bin/"
n1=$(basename "$1" | cut -d "." -f 1 | sed 's/^/tmp_/g')

### RUN in a subdirectory in home directory
seqkit grep -n -f "$2" "$1" > "$n1"_nucmerrep.fa
#### reduce contig names to identifable numbers and split 1 file per contig
echo "s/$5//g" > tmp1
sed -i -f tmp1 "$n1"_nucmerrep.fa
seqkit split -fi "$n1"_nucmerrep.fa

########### NUCMER
#### perform NUCMER alignment
### $4 sets the minimum length of alignments - to low and there will be much noise/complexity
#### for FULL (= all contigs), generate image, png, order contigs, with title, similarity colour scale
for f in "$n1"_nucmerrep.fa.split/*.fa; do "$M"nucmer --maxmatch --nosimplify -L $4 -p $(basename "$f" .fa) $f $f; done

#### generate images
for f in "$n1"_nucmerrep.fa.split/*.fa; do "$M"mummerplot --postscript -title $3 --color -p $(basename "$f" .fa) $(basename "$f" .fa).delta; done

##### get repeat coords and ref
### get coords
for f in "$n1"_nucmerrep.fa.split/*.fa; do "$M"show-coords -HTd $(basename "$f" .fa).delta | awk '{if($10 == $11) print $0}' > tmp2_$(basename "$f" .fa); done
for f in tmp2_*; do sed -i -e '/^$/d' -e '1,1d' $f; done; cat tmp2_* > tmp2

### remove duplicated entries forward/reverse and remove all in-place self-hits and add back full contig name
awk -F "\t" 'BEGIN{OFS="\t"};{if($3 > $4) print $1,$2,$4,$3,$5,$6,$7,$8,$9,$10,$11; else print $0}' tmp2 | awk -F "\t" 'BEGIN{OFS="\t"};{if($1 > $3) print $3,$4,$1,$2,$5,$6,$7,$8,$9,$10,$11; else print $0}' | sort -u -t $'\t' -k 1,4n | awk '{if($1 == $3 && $2 ==$4) gsub(/.+/,"")}1' | sed '/^$/d' > tmp3

### rearrange and reformat into gff style
awk -F "\t" 'BEGIN{OFS="\t"};{print $10,"nucmer","repeats",$1,$2,".",$8,".","ID="a"_repeat"NR";Name="NR";length="$5";pid="$7}' tmp3 | sed -e 's/\.\t1\t\./\.\t+\t\./g' -e 's/\.\t-1\t\./\.\t-\t\./g' > tmp5
awk -F "\t" 'BEGIN{OFS="\t"};{print $10,"nucmer","repeats",$3,$4,".",$9,".","ID="a"_repeat"NR";Name="NR";length="$6";pid="$7}' tmp3 | sed -e 's/\.\t1\t\./\.\t+\t\./g' -e 's/\.\t-1\t\./\.\t-\t\./g' >> tmp5

echo "s/^/$5/g" > tmp1
sort -t $'\t' -k 1,1V -k 4,5n tmp5 | sed -f tmp1 - > IVEX_nucmerrep_"$n1".gff

### get fasta of repeats
awk -F"\t|;" 'BEGIN{OFS="\t"};{print $1,$4,$5,$1$9}' IVEX_nucmerrep_"$n1".gff | sed 's/ID=_/_/g' | bedtools getfasta -fi $1 -bed - -fo IVEX_nucmerrep_"$n1".fa -name

########### print the inverted terminal repeats of EsV-1
echo ";TTCTCCTCGCTAAGAAAATACCAAGGGTGAAACTCCTATCATAGGCCGACGATGAAAAAACTAGGTCCAGGATCTCAGACCAGACGGACTGATACATTTGAAAAAAAAAATCAGATTTCAGAAAATATATCACCATCCTGGCAACTGTAGTGCACGGGACACACTGCATAGCTCCACCGAGACTCCCTTGAATTGCAATAGCACATCCTCCATTTATACAAGCAGCCAAATGGCAATTTGTCTGGCTACACAGACAGGTGTTACACCTTTGGGCAACCATACTGTACATAAATCTGAGTTGAGTGGTACCCTTGGTTGCGTCGCATGTCAACAATTGGTGTTATGGAAAGACCCTCGCAGACCAAGCGTCAACGAAAGACCGTGTGACAACGTTATCGAAATACCAAGCGACAACGTCATCGGAAACTTCATCGGAAACTTCATCGGAAACTTCATCGGAAACTTCATCGGAAACTTCATCGGAAACTTCAACGAAATACCAAGCGTCAACGAAAGACGCAACGACATCGGAGGGGGCATCACCCAAGAGATCAATTTGGTGTTTCCCCTCGTTAAGAAAATACCAAGGGTGAAACTCCTATCATAGCCCGACGATGAAAAAACTAGGTCCAGGATCTCAGACCAGACGGACTGATACATTTGAAAAAAAAAATCAGATTTCAGAAAATATATCACCATCCTGGCAACTGTAGTGCACGGAACACACTGCATAGCTCCACCGAGACTCCCTTGAATTGCAATAGCACATCCTCCATTTATACAAGCAGCCAAATGGCAATTTGTCTGGCTACACAGCCAGGTGTTACACCTTTGGGCAACCATACTGTGCATAAATCTGAGTTGAGTGGTACCCTTGGTTGCGTCGCATGTCAACAATTGGTGTTATGGAAAGACCCTCGCAGACCAAGCGTCAACGAAAGACCGTGTGACAACGTTATCGAAATACCAAGCGACAACGTCATCGGAAACTTCATCGGAAACTTCATCGGAAACTTCATCGGAAACTTCATCGGAAACTTCATCGGAAACTTCAACGAAATACCAAGCGTCAACGAAAGACGCAACGACATCGGAGGGGGCATCACCCAAGAGATCAATTTGGTGTTTCCCCTCGTTAAGAAAATACCAAGGGTGAAACTCCTATCATAGCCCGACGATGAAAAAACTAGGTCCAGGATCTCAGACCAGACGGACTGATACATTTGAAAAAAAAAATCAGATTTCAGAAAATATATCACCATCCTGGCAACTGTAGTGCACGGAACACACTGCATAGCTCCACCGAGACTCCCTTGAATTGCAATAGCACATCCTCCATTTATACAAGCAGCCAAATGGCAATTTGTCTGGCTACACAGCCAGGTGTTACACCTTTGGGCAACCATACTGTGCATAAATCTGAGTTGAGTGGTACCCTTGGTTGCGTCGCATGTCAACAATTGGTGTTATGGAAAGACCCTCGCAGACCAAGCGTCAACGAAAGACCGTGTGACAACGTTATCGAAATACCAAGCGACAACGTCATCGGAAACTTCATCGGAAACTTCATCGGAAACTTCATCGGAAACTTCATCGGAAACTTCATCGGAAACTTCAACGAAATACCAAGCGTCAACGAAAGACGCAACGACATCGGAGGGGGCATCACCCAAGAGATCAATTTGGTGTTTCCCCTCGTTAAGAAAATACCAAGGGTGAAACTCCTATCATAGCCCGACGATGAAAAAACTAGGTCCAGGATCTCAGACCAGACGGACTGATACATTTGAAAAAAAAAATCA" > tmp_EsV1_ITR.fa

echo ";;GGGTGATGCCCCCTCCGATGTCGTTGCGTCTTTCGTTGACGCTTGGTATTTCGTTGAAGTTTCCGATGAAGTTTCCGATGAAGTTTCCGATGAAGTTTCCGATGAAGTTTCCCATGACGTTGTCACACGGTCTTTCGTTGACGCTTGGTCTGCGAGGGTCTTTCCGTAACACCAATTGTTGACATGCGACGCAACCAAGGGTACCACTCAACTCAGATTTATGCACAGTATGGTTGCCCAAAGATGTAACACCTGGCTGTGTAGCCAGACAAATTGCCATTTGGCTGCTTGTATAAGTGGAGGATGTGCTATTGCGATTCAAGGGAGTCTCGGTGGAGCTATGCGGTGTGTCCCGTGCACCACAGTTGCCAGGATGGTGATATATTTTCTGAAATCTGATTTTTTTTTTCAAATGTATCCGTCCGCCTGGTCTGAGATCCTGGACCTAGTTTTTTCATCGTCGGCCTATGATAGGAGTTTCACCCTTGGTATTTTCTTAACGAGGGGAAACAACAAATTGATCTCTTGGGTGATGCCCCCTCCGATGTCGTTGCGTCTTTCGTTGACGCTTGGTATATCGTTGAAGTTTCCGATGAAGTTTCCGATGAAGTTTCCGATGAAGTTTCCGATGAAGTTTCCCATGACGTTGTCACACGGTCTTTCGTTGACGCTTGGTCTGCGAGGGTCTTTCCGTAACACCAATTGTTGACATGCGACGCAACGAAGGGTACTACTCAACTCAGATTTATGCACAGTATGGTTGCCCAAAGGTGTAACACCTGGCTGTGTAGCCAGACAAATTGCCATTTGGCTGCTTGTATAAATGGAGGATGTGCTATTGCGATTCAAGGGAGTCTCGGTGGAGCTATGCGGTGTGTCCCGTGCACCACAGTTGCCAGGATGGTGATATATTTTCTGAAATCTGATTTTTTTTTTCAAATGTATCCGTCCGTCTGGTCTGAGATCCTGGACCTAGTTTTTTCATCGTCGGCCTATGATAGGAGTTTCACCCTTGGTATTTTCTTAACGAGGGGAAACAACAAATTGATCTCTTGGGTGATGCCCCCTCCGATGTCGTTGCGTCTTTCGTTGACGCTTGGTATTTCGTTGAAGTTTCCGATGAAGTTTCCGATGAAGTTTCCGATGAAGTTTCCGATGAAGTTTCCCATGACGTTGTCACACGGTCTTTCGTTGACGCTTGGTCTGCGAGGGTCTTTCCGTAACACCAATTGTTGACATGCGACGCAACCAAGGGTACCACTCAACTCAGATTTATGCACAGTATGGTTGCCCAAAGGTGTAACACCTGGCTGTGTAGCCAGACAAATTGCCATTTGGCTGCTTGTATAAATGGAGGATGTGCTATTGCAATTCAAGGGAGTCTCGGTGGAGCTATGCAGTGTGTCCCGTGCACTACAGTTGCCAGGATGGTGATATATTTTCTGAAATCTGATTTTTTTTTTCAAATGTATCCGTCCGTCTGGTCTGAGATCCTGGACCTAGTTTTTTCATCGTCGGCCTATGATAGGAGTTTCACCCTTGGTATTTTCTTAACGAGGGGAAACAACAAATTGATCTCTTGGGTGATGCCCCCTCCGATGTCGTTGCGTCTTTCGTTGACGCTTGGTATTTCGTTGAAGTTTCCGATGAAGTTTCCGATGAAGTTTCCGATGACGTTGTCGCTTGGTATTTCGATGACGTTGTCACACGGTCTTTCGTTGACGCTTGGTCTGCGAGGGTCTTTCCATAACACTAATTGTTGACATGCGACGCAACGAAGGGTATCACTCAACTCAGATTTCTGCACAGTATGGTTGCCCAAAGGTGTAACACCCGGCTGTGTAGCCAGAAAAACTTTAGACTTGT" >> tmp_EsV1_ITR.fa

sed -i -e 's/;;/>EsV1_ITR_rev\n/' -e 's/;/>EsV1_ITR_for\n/' tmp_EsV1_ITR.fa

##### align EsV-1 terminal repeats and query repeat sequences
"$M"nucmer --maxmatch --nosimplify -p "$n1"_vs_ITR tmp_EsV1_ITR.fa IVEX_nucmerrep_"$n1".fa
##### get coords of hit to eSv-1 ITRs and add flag to any matches in gff
"$M"show-coords -HTd "$n1"_vs_ITR.delta > tmp6
sort -t $'\t' -k 7,7nr tmp6 | awk -F"\t" '!a[$11]++' | awk '{print "s/(.*"$11";.*)/\\1;EsV1ITRpid="$7"/g"}' | sed 's/_repeat/\\t.*repeat/g' > tmp7
sed -E -f tmp7 IVEX_nucmerrep_"$n1".gff > tmp && mv tmp IVEX_nucmerrep_"$n1".gff

#### final rename, move to results, and delete tmp file
for f in tmp_*nucmer*.ps; do mv "$f" "${f//tmp_/IVEX_nucmerrep_}"; done
for f in tmp_*nucmer*.delta; do mv "$f" "${f//tmp_/IVEX_nucmerrep_}"; done
for f in IVEX_nucmerrep_*nucmer*.ps; do mv "$f" "${f//_nucmerrep.id_/_contig}"; done
for f in IVEX_nucmerrep_*nucmer*.delta; do mv "$f" "${f//_nucmerrep.id_/_contig}"; done
for f in IVEX_nucmerrep_tmp*; do mv "$f" "${f//IVEX_nucmerrep_tmp_/IVEX_nucmerrep_}"; done
mv IVEX_nucmerrep_* /mnt/c/Users/Dean\ Mckeown/Documents/PC_iSSD/SBR_backup/finalresult/IVEX_WGA/
rm -fr tmp*
